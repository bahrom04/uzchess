# Generated by Django 4.2.8 on 2023-12-22 10:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("courses", "0002_rename_chapter_coursechapter_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="course",
            name="lavel",
            field=models.CharField(
                choices=[("Beginner", "Beginner"), ("Amateur", "Beginner")], default="Beginner", max_length=32
            ),
        ),
        migrations.AlterField(
            model_name="coursechapter",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="chapter", to="courses.course"
            ),
        ),
        migrations.RemoveField(
            model_name="coursecomment",
            name="cource",
        ),
        migrations.AlterField(
            model_name="courselesson",
            name="chapter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="lesson", to="courses.coursechapter"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="category",
            field=models.ForeignKey(
                default=1, on_delete=django.db.models.deletion.CASCADE, related_name="course", to="courses.category"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="coursecomment",
            name="cource",
            field=models.ManyToManyField(related_name="comment", to="courses.course"),
        ),
    ]
